import feedparser
import asyncio
from telegram import Bot
from datetime import datetime

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
BOT_TOKEN = "7758500745:AAGF3Vr0GLbQgk_XudSHGxZVbC33Spwtm3o"

# –¢–≤–æ–π –∫–∞–Ω–∞–ª
CHANNEL_ID = "@SaleHuntT"

# –°—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∏–¥—ã —Å–∫–∏–¥–æ–∫
RSS_FEEDS = [
    "https://slickdeals.net/newsearch.php?searchin=first&rss=1&sort=popularity&filter=Amazon",
    "https://www.hotukdeals.com/tag/amazon.rss"
]

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)

# –°–ø–∏—Å–æ–∫ —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
posted_links = set()

# –§–∞–π–ª –¥–ª—è –ª–æ–≥–æ–≤
LOG_FILE = "bot_log.txt"

def log_message(message: str):
    """–ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–æ–≥-—Ñ–∞–π–ª —Å —Ç–∞–π–º—à—Ç–∞–º–ø–æ–º"""
    with open(LOG_FILE, "a", encoding="utf-8") as f:
        f.write(f"[{datetime.now().strftime('%Y-%m-%d %H:%M:%S')}] {message}\n")

async def fetch_and_post_deals():
    while True:
        for feed_url in RSS_FEEDS:
            try:
                feed = feedparser.parse(feed_url)
                for entry in feed.entries:
                    link = entry.link
                    title = entry.title
                    if link not in posted_links:
                        posted_links.add(link)
                        message = f"üî• {title}\n\nüëâ [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ]({link})"
                        try:
                            await bot.send_message(
                                chat_id=CHANNEL_ID,
                                text=message,
                                parse_mode='Markdown',
                                disable_web_page_preview=False
                            )
                            print(f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {title}")
                            log_message(f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {title}")
                        except Exception as send_error:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {send_error}")
                            log_message(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {send_error}")
            except Exception as feed_error:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–¥–∞: {feed_error}")
                log_message(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–¥–∞: {feed_error}")

        # –ü—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–æ–≤—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
        await asyncio.sleep(30 * 60)

if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ —Å–∫–∏–¥–∫–∞–º–∏!")
    log_message("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    asyncio.run(fetch_and_post_deals())
